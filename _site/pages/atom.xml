<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel>
    <title>oh_ouyang的博客</title>
    <link>http://github.com/Guo0625</link>
    <description>My personal blog</description>
    
      <item>
        <title>vector中erase删除</title>
        <link>http://github.com/Guo0625/2015/09/21/stlvectorerase.html</link>
        <guid isPermaLink="true">http://github.com/Guo0625/2015/09/21/stlvectorerase.html</guid>
        <pubDate>Mon, 21 Sep 2015 00:00:00 +0800</pubDate>
        <description>&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;vector&amp;gt;
using namespace std;
int main()
{
    vector&amp;lt;int&amp;gt; vec_int;

    vec_int.push_back(0);
    vec_int.push_back(1);
    vec_int.push_back(2);
    vec_int.push_back(3);
    vec_int.push_back(4);
    vec_int.push_back(5);

    for (vector&amp;lt;int&amp;gt;::iterator iter = vec_int.begin(); iter!=vec_int.end();)
    {
        if (*iter == 3 || *iter == 2) {
            iter = vec_int.erase(iter);
        }
        else
        {
            iter++;
        }
    }

    for (vector&amp;lt;int&amp;gt;::iterator iter = vec_int.begin(); iter!=vec_int.end();iter++)
    {
        cout&amp;lt;&amp;lt;*iter&amp;lt;&amp;lt;&amp;quot; &amp;quot;;
    }
    cout&amp;lt;&amp;lt;endl;
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;执行上面代码输出结果：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;0 1 4 5 
Program ended with exit code: 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对比下面的代码&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;vector&amp;gt;
using namespace std;
int main()
{
    vector&amp;lt;int&amp;gt; vec_int;

    vec_int.push_back(0);
    vec_int.push_back(1);
    vec_int.push_back(2);
    vec_int.push_back(3);
    vec_int.push_back(4);
    vec_int.push_back(5);

    for (vector&amp;lt;int&amp;gt;::iterator iter = vec_int.begin(); iter!=vec_int.end();iter++)
    {
        if (*iter == 3 || *iter == 2)
        {
            vec_int.erase(iter);
        }
    }
    for (vector&amp;lt;int&amp;gt;::iterator iter = vec_int.begin(); iter!=vec_int.end();iter++)
    {
        cout&amp;lt;&amp;lt;*iter&amp;lt;&amp;lt;&amp;quot; &amp;quot;;
    }
    cout&amp;lt;&amp;lt;endl;
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;执行上面代码输出结果：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;0 1 3 4 5 
Program ended with exit code: 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;vector的删除(erase)操作,由于vector需要能以下标方式取数据，所以必须时刻保证连续的存储空间，对应于实现上，即，当删除vector中间的一个成员时，这个成员后面的所有成员，会以原顺序向前全部拷贝过来。&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>A星寻路算法</title>
        <link>http://github.com/Guo0625/2015/07/07/astar.html</link>
        <guid isPermaLink="true">http://github.com/Guo0625/2015/07/07/astar.html</guid>
        <pubDate>Tue, 07 Jul 2015 00:00:00 +0800</pubDate>
        <description>&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;//
//  Astar.c
//  Astar
//
//  Created by bo li on 15-7-2.
//  Copyright (c) 2015年 Ada. All rights reserved.
//

#include &amp;lt;stdio.h&amp;gt;

enum{
    START = 1,
    BARRIER,
    END
};

const int ROW = 10;
const int COL = 10;

int map[ROW][COL]={
    {1,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,3}
};

typedef struct list{
    int x;
    int y;
    float g; //父节点到邻居的代价1 or 1.4
    float h; //到目的地的曼哈顿距离
    float f; //f=g+h
}list;

struct list openlist[100];
struct list closelist[100];
int openlist_size = 0;

//排序找到f最小的节点
int sortList(list* listArry, int listlen)
{
    int index = 0;
    float f = listArry[0].f;
    for (int i=0; i&amp;lt;listlen-1; i++)
    {
        if (f&amp;gt;=listArry[i+1].f)
        {
            f = listArry[i+1].f;
            index = i+1;
        }
    }
    return index;
}
//将openlist表中的f最小的节点存入到closelist中 (c语言没有引用)
void swpList(list* listsrc, list* listdes, int *listdeslen)
{
    listdes[*listdeslen].x = listsrc-&amp;gt;x;
    listdes[*listdeslen].y = listsrc-&amp;gt;y;
    listdes[*listdeslen].g = listsrc-&amp;gt;g;
    listdes[*listdeslen].h = listsrc-&amp;gt;h;
    listdes[*listdeslen].f = listsrc-&amp;gt;f;
    (*listdeslen) += 1;

//    printf(&amp;quot;\n添加节点到closelist（%d,%d）\n&amp;quot;,listsrc-&amp;gt;x,listsrc-&amp;gt;y);
}

//删除openlist中的最小节点
void deleteNode(list* listArry, int index, int *list_len)
{
    for (int i=index; i&amp;lt;*list_len; i++)
    {
        listArry[i].x = listArry[i+1].x;
        listArry[i].y = listArry[i+1].y;
        listArry[i].g = listArry[i+1].g;
        listArry[i].h = listArry[i+1].h;
        listArry[i].f = listArry[i+1].f;
    }

    *list_len -= 1;
}

//计算当前节点到目的节点的曼哈顿距离
float getManhatondistance(int start_x, int start_y, int end_x, int end_y)
{
    float distance = 0;
    int x = abs(end_x-start_x);
    int y = abs(end_y-start_y);

    if (x==y)
    {
//        distance = x*1.4;
        distance = x+y;
//        printf(&amp;quot;\n（%d,%d）distance = %f\n&amp;quot;, start_x, start_y, distance);
    }
    else
    {
//        distance = abs(x-1)*1+y*1.4;
        distance = x+y;
//        printf(&amp;quot;\n（%d,%d）distance = %f\n&amp;quot;, start_x, start_y, distance);
    }

    return distance;
}

//判断节点是否在openlist中
int isExistOpenList(int list_len, int x, int y)
{
    for (int i=0; i&amp;lt;list_len; i++)
    {
        if ((openlist[i].x==x)&amp;amp;&amp;amp;(openlist[i].y==y))
        {
            return 1;
        }
    }
    return 0;
}

//寻找邻居节点，并将其加入到openlist中
void addNeighbourNode(list* listArry, int *list_len, int index, int end_x, int end_y)
{
    int index_x = closelist[index].x;
    int index_y = closelist[index].y;
//    printf(&amp;quot;ddd(%d,%d)%d\n&amp;quot;,index_x, index_y,index);

    /*
     八个方向
     (-1,-1)(-1,0)(-1,1)
     ( 0,-1)( 0,0)( 0,1)
     ( 1,-1)( 1,0)( 1,1)
     */


    //(-1,0)
    if ((index_x-1&amp;gt;=0)&amp;amp;&amp;amp;(index_y&amp;lt;COL)&amp;amp;&amp;amp;map[index_x-1][index_y+0]!=BARRIER)
    {
        if(!isExistOpenList(*list_len, index_x-1, index_y))
        {
            openlist[*list_len].x = index_x-1;
            openlist[*list_len].y = index_y;
            openlist[*list_len].g = 1;
            openlist[*list_len].h = getManhatondistance(index_x-1, index_y, end_x, end_y);
            openlist[*list_len].f = openlist[*list_len].g + openlist[*list_len].h;
            *list_len += 1;
        }
    }
    //(0,-1)
    if ((index_x&amp;gt;=0)&amp;amp;&amp;amp;(index_y-1&amp;gt;=0)&amp;amp;&amp;amp;map[index_x][index_y-1]!=BARRIER)
    {
        if(!isExistOpenList(*list_len, index_x, index_y-1))
        {
            openlist[*list_len].x = index_x;
            openlist[*list_len].y = index_y-1;
            openlist[*list_len].g = 1;
            openlist[*list_len].h = getManhatondistance(index_x, index_y-1, end_x, end_y);
            openlist[*list_len].f = openlist[*list_len].g + openlist[*list_len].h;
            *list_len += 1;
        }
    }
    //(0,1)
    if ((index_x&amp;gt;=0)&amp;amp;&amp;amp;(index_y+1&amp;lt;COL)&amp;amp;&amp;amp;map[index_x][index_y+1]!=BARRIER)
    {
        if(!isExistOpenList(*list_len, index_x, index_y+1))
        {
            openlist[*list_len].x = index_x;
            openlist[*list_len].y = index_y+1;
            openlist[*list_len].g = 1;
            openlist[*list_len].h = getManhatondistance(index_x, index_y+1, end_x, end_y);
            openlist[*list_len].f = openlist[*list_len].g + openlist[*list_len].h;
            *list_len += 1;
        }
    }
    //(1,0)
    if ((index_x+1&amp;lt;ROW)&amp;amp;&amp;amp;(index_y&amp;gt;=0)&amp;amp;&amp;amp;map[index_x+1][index_y]!=BARRIER)
    {
        if(!isExistOpenList(*list_len, index_x+1, index_y))
        {
            openlist[*list_len].x = index_x+1;
            openlist[*list_len].y = index_y;
            openlist[*list_len].g = 1;
            openlist[*list_len].h = getManhatondistance(index_x+1, index_y, end_x, end_y);
            openlist[*list_len].f = openlist[*list_len].g + openlist[*list_len].h;
            *list_len += 1;
        }
    }
    //(-1,-1)
    if ((index_x-1&amp;gt;=0)&amp;amp;&amp;amp;(index_y-1&amp;gt;=0)&amp;amp;&amp;amp;map[index_x-1][index_y-1]!=BARRIER)
    {
        if(!isExistOpenList(*list_len, index_x-1, index_y-1))
        {
            openlist[*list_len].x = index_x-1;
            openlist[*list_len].y = index_y-1;
            openlist[*list_len].g = 1.4;
            openlist[*list_len].h = getManhatondistance(index_x-1, index_y-1, end_x, end_y);
            openlist[*list_len].f = openlist[*list_len].g + openlist[*list_len].h;
            *list_len += 1;
        }
    }
    //(1,-1)
    if ((index_x+1&amp;lt;ROW)&amp;amp;&amp;amp;(index_y-1&amp;gt;=0)&amp;amp;&amp;amp;map[index_x+1][index_y-1]!=BARRIER)
    {
        if(!isExistOpenList(*list_len, index_x+1, index_y-1))
        {
            openlist[*list_len].x = index_x+1;
            openlist[*list_len].y = index_y-1;
            openlist[*list_len].g = 1.4;
            openlist[*list_len].h = getManhatondistance(index_x+1, index_y-1, end_x, end_y);
            openlist[*list_len].f = openlist[*list_len].g + openlist[*list_len].h;
            *list_len += 1;
        }
    }
    //(-1,1)
    if ((index_x-1&amp;gt;=0)&amp;amp;&amp;amp;(index_y+1&amp;lt;COL)&amp;amp;&amp;amp;map[index_x-1][index_y+1]!=BARRIER)
    {
         if(!isExistOpenList(*list_len, index_x-1, index_y+1))
         {
             openlist[*list_len].x = index_x-1;
             openlist[*list_len].y = index_y+1;
             openlist[*list_len].g = 1.4;
             openlist[*list_len].h = getManhatondistance(index_x-1, index_y+1, end_x, end_y);
             openlist[*list_len].f = openlist[*list_len].g + openlist[*list_len].h;
             *list_len += 1;
         }
    }
    //(1,1)
    if ((index_x+1&amp;lt;ROW)&amp;amp;&amp;amp;(index_y+1&amp;lt;COL)&amp;amp;&amp;amp;map[index_x+1][index_y+1]!=BARRIER)
    {
        if(!isExistOpenList(*list_len, index_x+1, index_y+1))
        {
            openlist[*list_len].x = index_x+1;
            openlist[*list_len].y = index_y+1;
            openlist[*list_len].g = 1.4;
            openlist[*list_len].h = getManhatondistance(index_x+1, index_y+1, end_x, end_y);
            openlist[*list_len].f = openlist[*list_len].g + openlist[*list_len].h;
            *list_len += 1;
        }
    }
}

//判断终点是否在closelist中
int isEndNodeExistCloseTable(list* listArry, int len, int end_x, int end_y)
{
    for (int i=0; i&amp;lt;len; i++)
    {
        if ((listArry[i].x == end_x)&amp;amp;&amp;amp;(listArry[i].y == end_y))
        {
            return 1;
        }
    }
    return 0;
}

int main(int argvc, char **argv)
{
//    printf(&amp;quot;hello astar.\n&amp;quot;);
    int start_x=0;
    int start_y=0;
    int end_x=0;
    int end_y=0;
    for (int i=0; i&amp;lt;ROW; i++)
        for (int j=0; j&amp;lt;COL; j++)
        {
            if (map[i][j]==START)
            {
                start_x = i;
                start_y = j;

//                printf(&amp;quot;start (%d,%d)\n&amp;quot;,start_x,start_y);
            }
            if (map[i][j]==END)
            {
                end_x = i;
                end_y = j;
//                printf(&amp;quot;end (%d,%d)\n&amp;quot;,end_x,end_y);
            }
        }

    openlist[0].x = start_x;
    openlist[0].y = start_y;
    openlist[0].f = 0;//起点的f为0
    openlist_size = 1;

    int closelist_len = 0;

    while (openlist_size)
    {
//        printf(&amp;quot;openlist_size qian = %d\n&amp;quot;,openlist_size);
        int index = 0; //openlist中f最小的节点下标
        //找到代价最小的节点
        index = sortList(openlist, openlist_size);
//        printf(&amp;quot;index = %d\n&amp;quot;,index);
        //将代价最小的插入closelist中
        swpList(&amp;amp;openlist[index], closelist, &amp;amp;closelist_len);
//        printf(&amp;quot;closelist_len = %d\n&amp;quot;,closelist_len);
        //从openlist中移除代价最小的节点
        deleteNode(openlist, index, &amp;amp;openlist_size);
//        printf(&amp;quot;openlist_size = %d\n&amp;quot;,openlist_size);
        //添加代价最小节点的邻居节点到openlist中
        addNeighbourNode(openlist, &amp;amp;openlist_size, closelist_len-1, end_x, end_y);
        //
        if (isEndNodeExistCloseTable(closelist, closelist_len, end_x, end_y))
        {
            printf(&amp;quot;\npath &amp;quot;);
            for (int i=0; i&amp;lt;closelist_len; i++)
            {
                printf(&amp;quot;(%d,%d) &amp;quot;,closelist[i].x,closelist[i].y);
            }
            printf(&amp;quot;\n\n&amp;quot;);
            break;
        }

//        printf(&amp;quot;\nOPEN  &amp;quot;);
//        for (int i=0; i&amp;lt;openlist_size; i++)
//        {
//            printf(&amp;quot;(%d,%d)-&amp;gt;&amp;quot;,openlist[i].x,openlist[i].y);
//        }
//        printf(&amp;quot;\nCLOSE  &amp;quot;);
//        for (int i=0; i&amp;lt;closelist_len; i++)
//        {
//            printf(&amp;quot;(%d,%d)-&amp;gt;&amp;quot;,closelist[i].x,closelist[i].y);
//        }
//        printf(&amp;quot;\n\n&amp;quot;);
    }
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>轻型数据库sqlite的使用</title>
        <link>http://github.com/Guo0625/2015/06/23/new-post.html</link>
        <guid isPermaLink="true">http://github.com/Guo0625/2015/06/23/new-post.html</guid>
        <pubDate>Tue, 23 Jun 2015 00:00:00 +0800</pubDate>
        <description>&lt;p&gt;sqlite的存储结构&lt;/p&gt;

&lt;p&gt;属性：key1 key2 key3 key4&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;  1    2    3    4 
  a    b    c    d
  一   二    三   四
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;数据库中是顺序存储的：key1 key2 key3 key4 1    2    3    4 a    b    c    d 一   二    三   四&lt;/p&gt;

&lt;video src=&quot;http://guo0625.github.io/assets/blob/master/MichaelJackson.mp4&quot; poster=&quot;http://guo0625.github.io/lay1010/tree/gh-pages/public/img/dog.jpg&quot; controls&gt;&lt;/video&gt;

&lt;p&gt;&lt;embed src=&quot;http://myst729.github.io/assets/media/2015/web-components-custom-elements.mp4&quot; allowFullScreen=&quot;true&quot; quality=&quot;high&quot; width=&quot;480&quot; height=&quot;350&quot; align=&quot;middle&quot; allowScriptAccess=&quot;always&quot; &gt;&lt;/embed&gt;&lt;/p&gt;

&lt;iframe frameborder=&quot;0&quot; width=&quot;640&quot; height=&quot;498&quot; src=&quot;http://v.qq.com/iframe/player.html?vid=z0117bzvjfe&amp;tiny=0&amp;auto=0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;embed type=&quot;application/x-shockwave-flash&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; wmode=&quot;transparent&quot; quality=&quot;high&quot; height=&quot;480&quot; width=&quot;480&quot; src=&quot;http://video.weibo.com/player/1034:aa40fa9d786fb043f6f3256f90f3dfab/v.swf&quot;/&gt;&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>利用github jekyll 创建 blog</title>
        <link>http://github.com/Guo0625/2015/06/12/jekyll.html</link>
        <guid isPermaLink="true">http://github.com/Guo0625/2015/06/12/jekyll.html</guid>
        <pubDate>Fri, 12 Jun 2015 00:00:00 +0800</pubDate>
        <description>&lt;ul&gt;
    &lt;li&gt;作者：&lt;a href=&quot;http://weibo.com/xpmozong&quot; target=&quot;blank&quot;&gt;寞踪&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;本文地址：http://xpmozong.github.io/ruby/2013/11/27/jekyll/&lt;/li&gt;
    &lt;li&gt;转载请注明出处&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一、准备工作&lt;/p&gt;

&lt;p&gt;1、安装ruby，windows下推荐安装&lt;a href=&quot;http://rubyinstaller.org/downloads/&quot; target=&quot;_blank&quot;&gt;rubyinstaller&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2、windows安装&lt;a href=&quot;http://rubyinstaller.org/downloads/&quot; target=&quot;_blank&quot;&gt;DevKit&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;命令行进入刚刚安装的目录，我安装在这个目录：D:\DevKit,执行&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;ruby dk.rb init
ruby dk.rb install
gem install rdiscount --platform=ruby
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果能安装rdiscount成功说明安装DevKit成功。&lt;/p&gt;

&lt;p&gt;3、安装jekyll  &lt;/p&gt;

&lt;p&gt;执行 gem install jekyll  命令&lt;/p&gt;

&lt;p&gt;windows下会有编码问题，修改这个文件E:\soft\Ruby193\lib\ruby\gems\1.9.1\gems\jekyll-1.3.0\lib\jekyll&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;def read_yaml(base, name, opts = {})
  begin
    # self.content = File.read_with_options(File.join(base, name),
    #                                       merged_file_read_opts(opts))
    self.content = File.read(File.join(base, name), :encoding =&amp;gt; &amp;quot;utf-8&amp;quot;)
    if self.content =~ /\A(---\s*\n.*?\n?)^(---\s*$\n?)/m
      self.content = $POSTMATCH
      self.data = YAML.safe_load($1)
    end
  rescue SyntaxError =&amp;gt; e
    puts &amp;quot;YAML Exception reading #{File.join(base, name)}: #{e.message}&amp;quot;
  rescue Exception =&amp;gt; e
    puts &amp;quot;Error reading file #{File.join(base, name)}: #{e.message}&amp;quot;
  end

  self.data ||= {}
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;self.content = File.read(File.join(base, name), :encoding =&gt; &quot;utf-8&quot;) 把原来的注释，加上这行代码。&lt;/p&gt;

&lt;p&gt;二、创建github账户&lt;/p&gt;

&lt;p&gt;1、windows下操作，下载windows github，并在github上创建项目，名字是USERNAME.github.io。打开windows github，下载刚创建的项目，然后进入目录。&lt;/p&gt;

&lt;p&gt;下载&lt;a href=&quot;https://github.com/plusjade/jekyll-bootstrap&quot; target=&quot;_blank&quot;&gt;jekyll-bootstrap&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;解压后把.gitignore删掉，然后把文件夹里的内容，复制到自己的文件里。&lt;/p&gt;

&lt;p&gt;修改 _config.yml文件，这一行改成自己的production_url : http://USERNAME.github.io&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;本地运行，访问http://127.0.0.1:4000/&lt;/p&gt;

&lt;p&gt;推送到github上&lt;/p&gt;

&lt;p&gt;2、linux下，yum install rubygems ，gem install rdiscount --platform=ruby，gem install jekyll&lt;/p&gt;

&lt;p&gt;先要在github上添加ssh key，https://help.github.com/articles/generating-ssh-keys#platform-linux&lt;/p&gt;

&lt;p&gt;先创建项目USERNAME.github.io，不要点生成README&lt;/p&gt;

&lt;p&gt;在命令下，创建USERNAME.github.io文件夹，并进入&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;touch README.md
git init
git add README.md
git commit -m &amp;quot;first commit&amp;quot;
git remote add origin https://github.com/USERNAME/USERNAME.github.io.git
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;剩下的同理windows&lt;/p&gt;

&lt;p&gt;二、Jekyll使用&lt;/p&gt;

&lt;p&gt;1、创建第一篇博文&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;rake post title=&amp;quot;Hello World&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;默认情况下rake命令会在你的_posts目录下创建一个名为[年-月-日-post title.md]的文件，例如2012-05-04-Hello-World.md，名称中的空格会转换成“-”，时间为当前系统时间。当然这些都是可配置的。rake命令默认不会覆盖掉相同名称的文件。&lt;/p&gt;

&lt;p&gt;2、创建第一个页面&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# 根目录下创建页面
$ rake page name=&amp;quot;about.md&amp;quot;

# 自定义目录下创建页面
$ rake page name=&amp;quot;pages/about.md&amp;quot;

# 创建类似./pages/about/index.html目录结构的页面
$ rake page name=&amp;quot;pages/about&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
    三、域名绑定，这里有
    &lt;a href=&quot;https://help.github.com/articles/setting-up-a-custom-domain-with-pages&quot; target=&quot;_blank&quot;&gt;详细介绍&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;四、一点小补充&lt;/p&gt;

&lt;p&gt;git 命令&lt;/p&gt;

&lt;p&gt;1、推送&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git add .
git commit -m &amp;#39;test&amp;#39;
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2、更新&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git pull origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>break,continue,break的用法</title>
        <link>http://github.com/Guo0625/2015/06/12/break-continue-return.html</link>
        <guid isPermaLink="true">http://github.com/Guo0625/2015/06/12/break-continue-return.html</guid>
        <pubDate>Fri, 12 Jun 2015 00:00:00 +0800</pubDate>
        <description>&lt;p&gt;1、return 语句的作用&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;  (1) return 从当前的方法中退出,返回到该调用的方法的语句处,继续执行。 
  (2) return 返回一个值给调用该方法的语句，返回值的数据类型必须与方法的声明中的返回值的类型一致，可以使用强制类型转换来是数据类型一致。 
  (3) return 当方法说明中用void声明返回类型为空时，应使用这种格式，不返回任何值。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2、break语句的作用 &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;  (1) 只能在循环体内和switch语句体内使用break语句。 
  (2) 当break出现在循环体中的switch语句体内时，其作用只是跳出该switch语句体。
  (3) 当break出现在循环体中，但并不在switch语句体内时，则在执行break后，跳出本层循环体。 
  (4) 在循环结构中，应用break语句使流程跳出本层循环体，从而提前结束本层循环。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3、continue语句作用 &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;  (1) continue语句的一般形式为：contonue; 
  (2) 其作用是结束本次循环，即跳过本次循环体中余下尚未执行的语句，接着再一次进行循环的条件判定。 
  (3) 注意：执行continue语句并没有使整个循环终止。在while和do-while循环中，continue语句使得流程直接跳到循环控制条件的测试部分 ，然后决定循环是否继续进行。 
  (4) 在for 循环中，遇到continue后，跳过循环体中余下的语句，而去对for语句中的“表达式3”求值，然后进行“表达式2”的条件测试，最后根据“表达式2”的值来决定for循环是否执行。在循环体内，不论continue是作为何种语句中的语句成分，都将按上述功能执行，这点与break有所不同。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>初识Jni--HelloJni示例</title>
        <link>http://github.com/Guo0625/2015/06/11/jni.html</link>
        <guid isPermaLink="true">http://github.com/Guo0625/2015/06/11/jni.html</guid>
        <pubDate>Thu, 11 Jun 2015 00:00:00 +0800</pubDate>
        <description>&lt;p&gt;&lt;center&gt;第1部分&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;第一步：在自己所建的目录中创建HelloJni.java文件&lt;/p&gt;

&lt;p&gt;目录结构&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;  --hellojni
     --HelloJni.java
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;HelloJni.java内容&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;public class HelloJni{

    static{
        System.loadLibrary(&amp;quot;hellojni&amp;quot;); 
    }
    public native void sayHello();
    public static void main(String[] args){
        HelloJni helloJni = new HelloJni();
        helloJni.sayHello();
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第二步：在终端执行cd命令进入hellojni目录里，执行javac HelloJni.java命令生成class文件&lt;/p&gt;

&lt;p&gt;终端执行命令&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;localhost:xunzhou$ cd hellojni
localhost:hellojni xunzhou$ ls
HelloJni.java
localhost:hellojni xunzhou$ javac HelloJni.java 
localhost:hellojni xunzhou$ ls -l
total 16
-rw-r--r--  1 xunzhou  staff  315  6 11 10:15 HelloJni.class
-rw-r--r--  1 xunzhou  staff  191  6 11 10:00 HelloJni.java
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;目录结构&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;  --hellojni
     --HelloJni.java
     --HelloJni.class
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第三步：生成头文件，执行javah HelloJni命令&lt;/p&gt;

&lt;p&gt;终端执行命令&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;localhost:hellojni xunzhou$ javah HelloJni
localhost:hellojni xunzhou$ ls
HelloJni.class  HelloJni.h  HelloJni.java
localhost:hellojni xunzhou$ ls -l
total 24
-rw-r--r--  1 xunzhou  staff  315  6 11 10:15 HelloJni.class
-rw-r--r--  1 xunzhou  staff  400  6 11 10:19 HelloJni.h
-rw-r--r--  1 xunzhou  staff  191  6 11 10:00 HelloJni.java
localhost:hellojni xunzhou$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;目录结构&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;  --hellojni
     --HelloJni.java
     --HelloJni.class
     --HelloJni.h
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;头文件内容&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;/* DO NOT EDIT THIS FILE - it is machine generated */
#include &amp;lt;jni.h&amp;gt;
/* Header for class HelloJni */

#ifndef _Included_HelloJni
#define _Included_HelloJni
#ifdef __cplusplus
extern &amp;quot;C&amp;quot; {
#endif
/*
 * Class:     HelloJni
 * Method:    sayHello
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_HelloJni_sayHello
  (JNIEnv *, jobject, jstring);

#ifdef __cplusplus
}
#endif
#endif
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;至此，头文件创建完毕，.c文件自己创建即可。而jni之间参数传递，函数调用可以上网搜索有很多这方面的教程。&lt;/p&gt;

&lt;p&gt;另外，大家都看到创建的头文件中函数名为Java_HelloJni_sayHello。只有一级的包名HelloJni，类似com.example.hellojni的报名怎么创建呢。过程和上面的差不多，只是执行创建javah命令时有点区别。下面主要介绍一下。&lt;/p&gt;

&lt;p&gt;&lt;center&gt;第2部分&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;第一步：创建类似java工程src目录的目录结构（例：src/com/example/hellojni）&lt;/p&gt;

&lt;p&gt;目录结构&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;    --com
      --example
        --hellojni
          --HelloJni.java
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;HelloJni.java内容&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;package com.example.hellojni;

public class HelloJni{

    static{
        System.loadLibrary(&amp;quot;hellojni&amp;quot;); 
    }
    public native void sayHello();
    public static void main(String[] args){
        HelloJni helloJni = new HelloJni();
        helloJni.sayHello();
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第二步：进入HelloJni.java所在的目录内执行javac的命令（同上面第二步）。&lt;/p&gt;

&lt;p&gt;目录结构&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;    --com
      --example
        --hellojni
          --HelloJni.java
          --HelloJni.class
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第三步：生成头文件，如果执行javah命令会报如下错误。&lt;/p&gt;

&lt;p&gt;(中文在Mac下不识别，有乱码)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;localhost:hellojni xunzhou$ javah HelloJni
?????޷????? HelloJni
????????ļ??? ./HelloJni.class
???ļ???????????ࣺ com.example.hellojni.HelloJni
??ɾ?????ļ???ȷ?????ļ?λ????ȷ????·????Ŀ¼?С?
com.sun.tools.javac.util.Abort
    at com.sun.tools.javac.comp.Check.completionError(Check.java:162)
    at com.sun.tools.javadoc.DocEnv.loadClass(DocEnv.java:147)
    at com.sun.tools.javadoc.RootDocImpl.&amp;lt;init&amp;gt;(RootDocImpl.java:77)
    at com.sun.tools.javadoc.JavadocTool.getRootDocImpl(JavadocTool.java:159)
    at com.sun.tools.javadoc.Start.parseAndExecute(Start.java:330)
    at com.sun.tools.javadoc.Start.begin(Start.java:128)
    at com.sun.tools.javadoc.Main.execute(Main.java:66)
    at com.sun.tools.javah.Main.main(Main.java:147)
javadoc: ???? - ????????
2 ????
localhost:hellojni xunzhou$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;需要退出到com/example/hellojni目录外执行命令javah com.examlpe.hellojni.HelloJni（假如目录为Jni/com/example/hellojni，需要在Jni中执行命令）而不是javah HelloJni，这里是有区别的。&lt;/p&gt;

&lt;p&gt;目录结构&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;    --Jni
        --com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;执行命令&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;localhost:Jni xunzhou$ javah com.examlpe.hellojni.HelloJni
localhost:Jni xunzhou$ ls
com             
com_examlpe_hellojni_HelloJni.h
localhost:Jni xunzhou$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;头文件内容&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;/* DO NOT EDIT THIS FILE - it is machine generated */
#include &amp;lt;jni.h&amp;gt;
/* Header for class com_example_hellojni_HelloJni */

#ifndef _Included_com_example_hellojni_HelloJni
#define _Included_com_example_hellojni_HelloJni
#ifdef __cplusplus
extern &amp;quot;C&amp;quot; {
#endif
/*
 * Class:     com_example_hellojni_HelloJni
 * Method:    sayHello
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_example_hellojni_HelloJni_sayHello
  (JNIEnv *, jobject, jstring);

#ifdef __cplusplus
}
#endif
#endif
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;至此，Jni的头文件创建完毕。&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>android之adt脚本打包</title>
        <link>http://github.com/Guo0625/2015/05/18/adt.html</link>
        <guid isPermaLink="true">http://github.com/Guo0625/2015/05/18/adt.html</guid>
        <pubDate>Mon, 18 May 2015 00:00:00 +0800</pubDate>
        <description>&lt;p&gt;mac下配置好adt的环境变量，在工程的根目录下执行build命令，生成工程的配置文件。具体操作网上都有，比我讲解地详细。&lt;/p&gt;

&lt;p&gt;我主要是参考&lt;a href=&quot;http://www.cnblogs.com/stay/archive/2013/05/27/3102027.html&quot;&gt;简单的ant打包，修改渠道号&lt;/a&gt;这篇教程实现了修改versioncode和versionName，并且批量生成10个apk文件。&lt;/p&gt;

&lt;p&gt;下面是相应地脚本文件，使用的话只用修改相应地路径即可。&lt;/p&gt;

&lt;p&gt;若要修改其他的参数可以仿照检索“versionCode”关键字即可，前提是你的manifest文件里已经设置好了。&lt;/p&gt;

&lt;p&gt;脚本修改好后在终端输入如下命令即可：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ ant run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ant.properties&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# This file is automatically generated by Android Tools.
# Do not modify this file -- YOUR CHANGES WILL BE ERASED!
#
# This file must be checked in Version Control Systems.
#
# To customize properties used by the Ant build system edit
# &amp;quot;ant.properties&amp;quot;, and override values to adapt the script to your
# project structure.
#
# To enable ProGuard to shrink and obfuscate your code, uncomment this (available properties: sdk.dir, user.home):
#proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt


#编码方式
java.encoding=utf-8
#签名key文件绝对路径
key.store=/Users/username/Documents/Apk_fildes/keystore/mykeystore.keystore
#签名文件密码
key.store.password=123456789
#签名别称，中文的话需要转成utf-8编码，可以使用JDK自带的native2ascii工具
key.alias=mykeystore.keystore
#签名别称密码
key.alias.password=123456789
market_channels=00000
#设置app的版本（1.0.1）eg:version_code_1.version_code_2.app_version
version_code_1=1
version_code_2=0
app_version=0,1,2,3,4,5,6,7,8,9
#project name
project_name=MyTest
#project path
project_path=/Users/username/Documents/LUA/projects/proj.android
#project out path
project_out_path=/Users/username/Documents/Apk_fildes/keystore/out
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;local.properties&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# This file is automatically generated by Android Tools.
# Do not modify this file -- YOUR CHANGES WILL BE ERASED!
#
# This file must *NOT* be checked into Version Control Systems,
# as it contains information specific to your local configuration.

# location of the SDK. This is only used by Ant
# For customization when using a Version Control System, please read the
# header note.
sdk.dir=/Users/username/Documents/adt/sdk
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;build.xml&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;project name=&amp;quot;${project_name}&amp;quot; default=&amp;quot;add&amp;quot;&amp;gt;
    &amp;lt;property file=&amp;quot;local.properties&amp;quot; /&amp;gt;
    &amp;lt;property file=&amp;quot;ant.properties&amp;quot; /&amp;gt;
    &amp;lt;property environment=&amp;quot;env&amp;quot; /&amp;gt;
    &amp;lt;condition property=&amp;quot;sdk.dir&amp;quot; value=&amp;quot;${env.ANDROID_HOME}&amp;quot;&amp;gt;
        &amp;lt;isset property=&amp;quot;env.ANDROID_HOME&amp;quot; /&amp;gt;
    &amp;lt;/condition&amp;gt;
    &amp;lt;loadproperties srcFile=&amp;quot;project.properties&amp;quot; /&amp;gt;
    &amp;lt;fail
            message=&amp;quot;sdk.dir is missing. Make sure to generate local.properties using &amp;#39;android update project&amp;#39; or to inject it through the ANDROID_HOME environment variable.&amp;quot;
            unless=&amp;quot;sdk.dir&amp;quot;
    /&amp;gt;
    &amp;lt;import file=&amp;quot;custom_rules.xml&amp;quot; optional=&amp;quot;true&amp;quot; /&amp;gt;
    &amp;lt;import file=&amp;quot;${sdk.dir}/tools/ant/build.xml&amp;quot; /&amp;gt;

 &amp;lt;!--修改包名等--&amp;gt;
&amp;lt;!--相关环境及工具配置--&amp;gt;
 &amp;lt;property name=&amp;quot;sdk.platformtools&amp;quot; value=&amp;quot;${sdk.dir}/platform-tools&amp;quot; /&amp;gt;
 &amp;lt;property name=&amp;quot;sdk.tools&amp;quot; value=&amp;quot;${sdk.dir}/tools&amp;quot; /&amp;gt;
 &amp;lt;property name=&amp;quot;aapt&amp;quot; value=&amp;quot;${sdk.platformtools}/aapt&amp;quot; /&amp;gt;
 &amp;lt;property name=&amp;quot;adb&amp;quot; value=&amp;quot;${sdk.platformtools}/adb&amp;quot; /&amp;gt;
 &amp;lt;property name=&amp;quot;dx&amp;quot; value=&amp;quot;${sdk.platformtools}/dx&amp;quot; /&amp;gt;
 &amp;lt;property name=&amp;quot;apkbuilder&amp;quot; value=&amp;quot;${sdk.tools}/apkbuilder&amp;quot; /&amp;gt;
 &amp;lt;property name=&amp;quot;android.jar&amp;quot; value=&amp;quot;${sdk.dir}/platforms/android-17/android.jar&amp;quot; /&amp;gt;

 &amp;lt;property name=&amp;quot;old_package_name&amp;quot; value=&amp;quot;com.example.travel&amp;quot; /&amp;gt;
 &amp;lt;property name=&amp;quot;new_package_name&amp;quot; value=&amp;quot;com.zwtx.travel&amp;quot; /&amp;gt;
 &amp;lt;property name=&amp;quot;org_project.dir&amp;quot; value=&amp;quot;${project_out_path}&amp;quot; /&amp;gt;
 &amp;lt;!--原工程目录--&amp;gt;
 &amp;lt;property name=&amp;quot;project.dir&amp;quot; value=&amp;quot;${project_path}&amp;quot; /&amp;gt;


 &amp;lt;!--新工程各个目录--&amp;gt;
 &amp;lt;property name=&amp;quot;build.dir&amp;quot; value=&amp;quot;${org_project.dir}/bin&amp;quot; /&amp;gt;
 &amp;lt;property name=&amp;quot;project.dir&amp;quot; value=&amp;quot;${org_project.dir}/temp&amp;quot; /&amp;gt;
 &amp;lt;!--新工程目录--&amp;gt;
 &amp;lt;property name=&amp;quot;classes.dir&amp;quot; value=&amp;quot;${project.dir}/bin/classes&amp;quot; /&amp;gt;
 &amp;lt;property name=&amp;quot;buildtemp.dir&amp;quot; value=&amp;quot;${project.dir}/bin&amp;quot; /&amp;gt;
 &amp;lt;property name=&amp;quot;src.dir&amp;quot; value=&amp;quot;${project.dir}/src&amp;quot; /&amp;gt;
 &amp;lt;property name=&amp;quot;res.dir&amp;quot; value=&amp;quot;${project.dir}/res&amp;quot; /&amp;gt;
 &amp;lt;property name=&amp;quot;gen.dir&amp;quot; value=&amp;quot;${project.dir}/gen&amp;quot; /&amp;gt;
 &amp;lt;property name=&amp;quot;asset.dir&amp;quot; value=&amp;quot;${project.dir}/assets&amp;quot; /&amp;gt;

 &amp;lt;taskdef resource=&amp;quot;net/sf/antcontrib/antcontrib.properties&amp;quot;&amp;gt;  
  &amp;lt;classpath&amp;gt;  
    &amp;lt;pathelement location=&amp;quot;lib/ant-contrib-1.0b3.jar&amp;quot;/&amp;gt;  
  &amp;lt;/classpath&amp;gt;  
&amp;lt;/taskdef&amp;gt;  
 &amp;lt;target name=&amp;quot;run&amp;quot;&amp;gt;  
&amp;lt;!--    &amp;lt;foreach target=&amp;quot;modify_manifest&amp;quot; list=&amp;quot;${market_channels}&amp;quot; param=&amp;quot;channel&amp;quot; delimiter=&amp;quot;,&amp;quot;&amp;gt; 
   &amp;lt;/foreach&amp;gt;   --&amp;gt;
   &amp;lt;foreach target=&amp;quot;modify_manifest&amp;quot; list=&amp;quot;${app_version}&amp;quot; param=&amp;quot;versioncode&amp;quot; delimiter=&amp;quot;,&amp;quot;&amp;gt;  
   &amp;lt;/foreach&amp;gt;  
 &amp;lt;/target&amp;gt;  

&amp;lt;target name=&amp;quot;modify_manifest&amp;quot;&amp;gt;  

  &amp;lt;echo&amp;gt;${channel}&amp;lt;/echo&amp;gt;
  &amp;lt;echo&amp;gt;${versioncode}&amp;lt;/echo&amp;gt;
&amp;lt;!-- 替换versionCode --&amp;gt;
  &amp;lt;replaceregexp flags=&amp;quot;g&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; byline=&amp;quot;true&amp;quot;&amp;gt;
    &amp;lt;regexp pattern=&amp;quot;android:versionCode(.*)&amp;quot;/&amp;gt;
     &amp;lt;substitution expression=&amp;quot;android:versionCode=&amp;amp;quot;${versioncode}&amp;amp;quot;&amp;quot;/&amp;gt;
      &amp;lt;fileset dir=&amp;quot;&amp;quot; includes=&amp;quot;AndroidManifest.xml&amp;quot;/&amp;gt;
   &amp;lt;/replaceregexp&amp;gt;
&amp;lt;!-- 替换versionName --&amp;gt;
  &amp;lt;replaceregexp flags=&amp;quot;g&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; byline=&amp;quot;true&amp;quot;&amp;gt;
    &amp;lt;regexp pattern=&amp;quot;android:versionName(.*)&amp;quot;/&amp;gt;
     &amp;lt;substitution expression=&amp;quot;android:versionName=&amp;amp;quot;${version_code_1}.${versioncode}&amp;amp;quot;&amp;gt;&amp;quot;/&amp;gt;
      &amp;lt;fileset dir=&amp;quot;&amp;quot; includes=&amp;quot;AndroidManifest.xml&amp;quot;/&amp;gt;
   &amp;lt;/replaceregexp&amp;gt;
  &amp;lt;property name=&amp;quot;project_new&amp;quot;&amp;gt;add&amp;lt;/property&amp;gt;
  &amp;lt;property name=&amp;quot;reasedAPK&amp;quot; value=&amp;quot;${project_name}_v${version_code_1}.${versioncode}.apk&amp;quot; /&amp;gt;
  &amp;lt;antcall target=&amp;quot;add&amp;quot; /&amp;gt;
&amp;lt;/target&amp;gt;


 &amp;lt;target name=&amp;quot;init&amp;quot;&amp;gt;
  &amp;lt;echo&amp;gt; &amp;quot;Target init is called&amp;quot; &amp;lt;/echo&amp;gt;
   &amp;lt;!--替换工程中出现的包名 --&amp;gt;
  &amp;lt;replaceregexp flags=&amp;quot;g&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; byline=&amp;quot;true&amp;quot;&amp;gt;
    &amp;lt;regexp pattern=&amp;quot;package(.*)${old_package_name}&amp;quot;/&amp;gt;
     &amp;lt;substitution expression=&amp;quot;package=&amp;amp;quot;${new_package_name}&amp;quot;/&amp;gt;
      &amp;lt;fileset dir=&amp;quot;${project.dir}&amp;quot; includes=&amp;quot;AndroidManifest.xml&amp;quot;/&amp;gt;
   &amp;lt;/replaceregexp&amp;gt;
&amp;lt;!--修改工程的package ****包名--&amp;gt;
  &amp;lt;replaceregexp flags=&amp;quot;g&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; byline=&amp;quot;true&amp;quot;&amp;gt;
    &amp;lt;regexp pattern=&amp;quot;package(.*)${old_package_name}&amp;quot;/&amp;gt;
     &amp;lt;substitution expression=&amp;quot;package ${new_package_name}&amp;quot;/&amp;gt;
      &amp;lt;fileset dir=&amp;quot;${project.dir}/src&amp;quot; includes=&amp;quot;**/*.java&amp;quot;/&amp;gt;
   &amp;lt;/replaceregexp&amp;gt;
&amp;lt;!--修改工程的import ****.R包名--&amp;gt;
  &amp;lt;replaceregexp flags=&amp;quot;g&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; byline=&amp;quot;true&amp;quot;&amp;gt;
    &amp;lt;regexp pattern=&amp;quot;import(.*)${old_package_name}.R&amp;quot;/&amp;gt;
     &amp;lt;substitution expression=&amp;quot;import ${new_package_name}.R&amp;quot;/&amp;gt;
      &amp;lt;fileset dir=&amp;quot;${project.dir}/src&amp;quot; includes=&amp;quot;**/*.java&amp;quot;/&amp;gt;
   &amp;lt;/replaceregexp&amp;gt;
  &amp;lt;/target&amp;gt;


  &amp;lt;!--生成R.java文件 ${sdk.dir}\platform-tools\aapt.exe--&amp;gt;
  &amp;lt;target name=&amp;quot;genRJava&amp;quot;&amp;gt;
    &amp;lt;echo&amp;gt; &amp;quot;Target genRJava is called&amp;quot; &amp;lt;/echo&amp;gt;
    &amp;lt;exec executable=&amp;quot;/Users/xunzhou/Documents/adt/sdk/platform-tools/aapt&amp;quot; failonerror=&amp;quot;true&amp;quot;&amp;gt;
      &amp;lt;arg value=&amp;quot;package&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;-m&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;-J&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;${project.dir}/gen&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;-M&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;${project.dir}/AndroidManifest.xml&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;-S&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;${res.dir}&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;-I&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;${android.jar}&amp;quot;/&amp;gt;
    &amp;lt;/exec&amp;gt;
  &amp;lt;/target&amp;gt;
  &amp;lt;!-- 项目编译 --&amp;gt;
  &amp;lt;target name=&amp;quot;compile&amp;quot; &amp;gt;
    &amp;lt;echo&amp;gt; &amp;quot;Target compile is called&amp;quot; &amp;lt;/echo&amp;gt;
    &amp;lt;javac encoding=&amp;quot;UTF-8&amp;quot; target=&amp;quot;1.5&amp;quot; debug=&amp;quot;true&amp;quot; extdirs=&amp;quot;&amp;quot; 
     srcdir=&amp;quot;${gen.dir};${src.dir}&amp;quot; 
     destdir=&amp;quot;${classes.dir}&amp;quot; bootclasspath=&amp;quot;${android.jar}&amp;quot;&amp;gt;
      &amp;lt;classpath&amp;gt;
        &amp;lt;fileset dir=&amp;quot;${project.dir}/libs&amp;quot; includes=&amp;quot;*.jar&amp;quot;&amp;gt;
        &amp;lt;/fileset&amp;gt;
      &amp;lt;/classpath&amp;gt;
    &amp;lt;/javac&amp;gt;
  &amp;lt;/target&amp;gt;
&amp;lt;!-- 生成dex文件 ${sdk.dir}\platform-tools\dx.bat --&amp;gt;
  &amp;lt;target name=&amp;quot;dex&amp;quot; &amp;gt;
    &amp;lt;echo&amp;gt; &amp;quot;Target dex is called&amp;quot; &amp;lt;/echo&amp;gt;
    &amp;lt;apply executable=&amp;quot;${sdk.dir}/platform-tools/dx&amp;quot; failonerror=&amp;quot;true&amp;quot; parallel=&amp;quot;true&amp;quot;&amp;gt;
      &amp;lt;arg value=&amp;quot;--dex&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;--output=${buildtemp.dir}/classes.dex&amp;quot;/&amp;gt;
      &amp;lt;arg path=&amp;quot;${classes.dir}&amp;quot;/&amp;gt;
      &amp;lt;fileset dir=&amp;quot;${project.dir}/libs&amp;quot; includes=&amp;quot;*.jar&amp;quot;/&amp;gt;
    &amp;lt;/apply&amp;gt;
  &amp;lt;/target&amp;gt;

 &amp;lt;!-- 打包资源文件 ${sdk.dir}\platform-tools\aapt.exe --&amp;gt;
  &amp;lt;target name=&amp;quot;packageRes&amp;quot;&amp;gt;
    &amp;lt;echo&amp;gt; &amp;quot;Target packageRes is called&amp;quot; &amp;lt;/echo&amp;gt;
    &amp;lt;exec executable=&amp;quot;${aapt}&amp;quot; failonerror=&amp;quot;true&amp;quot;&amp;gt;
      &amp;lt;arg value=&amp;quot;package&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;-f&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;-M&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;${project.dir}/AndroidManifest.xml&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;-S&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;${res.dir}&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;-A&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;${asset.dir}&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;-I&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;${android.jar}&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;-F&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;${buildtemp.dir}/resources.ap_&amp;quot;/&amp;gt;
    &amp;lt;/exec&amp;gt;
  &amp;lt;/target&amp;gt;

 &amp;lt;!-- 打包Apk --&amp;gt;
  &amp;lt;target name=&amp;quot;add&amp;quot; depends=&amp;quot;init,genRJava,compile,dex,packageRes&amp;quot;&amp;gt;
    &amp;lt;echo&amp;gt; &amp;quot;Target add is called&amp;quot; &amp;lt;/echo&amp;gt;
    &amp;lt;exec executable=&amp;quot;${apkbuilder}&amp;quot; failonerror=&amp;quot;true&amp;quot;&amp;gt;
      &amp;lt;arg value=&amp;quot;${buildtemp.dir}/unsigntest.apk&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;-u&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;-z&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;${buildtemp.dir}/resources.ap_&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;-f&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;${buildtemp.dir}/classes.dex&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;-rf&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;${src.dir}&amp;quot;/&amp;gt;
      &amp;lt;!--打包.jar文件--&amp;gt;
      &amp;lt;arg value=&amp;quot;-rj&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;${project.dir}/libs&amp;quot;/&amp;gt;
      &amp;lt;!--打包.so文件--&amp;gt;
      &amp;lt;arg value=&amp;quot;-nf&amp;quot;/&amp;gt;
      &amp;lt;arg value=&amp;quot;${project.dir}/libs&amp;quot;/&amp;gt;
    &amp;lt;/exec&amp;gt;
    &amp;lt;!-- 签名 --&amp;gt;
  &amp;lt;signjar
     jar=&amp;quot;${buildtemp.dir}/unsigntest.apk&amp;quot;
     signedjar=&amp;quot;${project_out_path}/${reasedAPK}&amp;quot;
     keystore=&amp;quot;${key.store}&amp;quot;
     storepass=&amp;quot;${key.store.password}&amp;quot;
     alias=&amp;quot;${key.alias}&amp;quot;
     keypass=&amp;quot;${key.alias.password}&amp;quot;
     verbose=&amp;quot;-verbose&amp;quot;/&amp;gt;
   &amp;lt;/target&amp;gt;

&amp;lt;/project&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://pan.baidu.com/s/1sjzBK0d&quot;&gt;配置文件下载&lt;/a&gt;&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>网页爬虫-JPG图</title>
        <link>http://github.com/Guo0625/2015/05/13/wangyepachong.html</link>
        <guid isPermaLink="true">http://github.com/Guo0625/2015/05/13/wangyepachong.html</guid>
        <pubDate>Wed, 13 May 2015 00:00:00 +0800</pubDate>
        <description>&lt;p&gt;从网上找到的网页爬虫代码，可以爬网页上的jpg图片&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# -*- coding: utf-8 -*-
import urllib2,urllib,re

tmmurl =&amp;quot;http://www.rouruan.com/models/mdown/&amp;quot;

i = 3
while i&amp;lt;68:
    url = tmmurl + str(i)
    up = urllib2.urlopen(url)
    cont = up.read()
    cont = cont.decode(&amp;#39;UTF-8&amp;#39;)
    reg = r&amp;#39;src=&amp;quot;(.uploads.+?\.jpg)&amp;quot; class&amp;#39;
    imgre = re.compile(reg)
    imglist = re.findall(imgre, cont)
    mdnh=&amp;quot;&amp;quot;&amp;quot;xjt_p4&amp;quot;&amp;gt;&amp;quot;&amp;quot;&amp;quot;
    mdnt=&amp;quot;&amp;lt;/h1&amp;gt;&amp;quot;
    mnh = cont.find(mdnh)
    mnt = cont.find(mdnt, mnh)
    mn = cont[mnh:mnt+len(mdnt)]
    md_nh=&amp;quot;&amp;lt;h1&amp;gt;&amp;quot;
    md_nt=&amp;quot;&amp;lt;/h1&amp;gt;&amp;quot;
    m_nh = mn.find(md_nh)
    m_nt = mn.find(md_nt, m_nh)
    m_n = mn[m_nh+len(md_nh):m_nt]
    numreg = r&amp;#39;href=&amp;quot;#&amp;quot;&amp;gt;TuiGirl.+?(\d+).+?/a&amp;#39;
    numre = re.compile(numreg)
    numlist = re.findall(numre, cont)
    if len(numlist)!=0:
        number = numlist[0]
    else:
        number = 1
    x=0
    for imgurl in imglist:
        urllib.urlretrieve(&amp;quot;http://www.rouruan.com&amp;quot;+imgurl,&amp;quot;//Users//xunzhou//Downloads//&amp;quot;+str(number)+&amp;quot;-&amp;quot;+m_n+str(x)+&amp;quot;.jpg&amp;quot;)
        x+=1
    i +=1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>C语言点滴之extern关键字</title>
        <link>http://github.com/Guo0625/2015/05/13/learn-c-extern.html</link>
        <guid isPermaLink="true">http://github.com/Guo0625/2015/05/13/learn-c-extern.html</guid>
        <pubDate>Wed, 13 May 2015 00:00:00 +0800</pubDate>
        <description>&lt;p&gt;假如a.h中有 int a=10; t1.cpp和t2.cpp同时include &amp;quot;a.h&amp;quot;则编译不成功，因为a重复定义；&lt;/p&gt;

&lt;p&gt;如果 a.h中是 static int a=10;则可以，因为t1和t2中的a只是名字相同，地址空间不同；&lt;/p&gt;

&lt;p&gt;如果a.h中是 extern int a; 并且在a.cpp中 int a=10; 则t1和t2中的a指向同一个地址空间。&lt;/p&gt;

&lt;p&gt;通过如下例子学习extern：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;//
//  test.h
//  Ctest
//
//  Created by bo li on 15-5-13.
//  Copyright (c) 2015年 zxtw. All rights reserved.
//

#ifndef Ctest_test_h
#define Ctest_test_h

extern int a;

#endif
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;//
//  test.c
//  Ctest
//
//  Created by bo li on 15-5-13.
//  Copyright (c) 2015年 zxtw. All rights reserved.
//

#include &amp;quot;test.h&amp;quot;

int a = 10;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;//
//  foo.h
//  Ctest
//
//  Created by bo li on 15-5-13.
//  Copyright (c) 2015年 zxtw. All rights reserved.
//

#ifndef Ctest_foo_h
#define Ctest_foo_h

void print_a();

#endif
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;//
//  test.c
//  Ctest
//
//  Created by bo li on 15-5-13.
//  Copyright (c) 2015年 zxtw. All rights reserved.
//

#include &amp;lt;stdio.h&amp;gt;
#include &amp;quot;test.h&amp;quot;

void print_a()
{
    printf(&amp;quot;foo a = %d\n&amp;quot;, a);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;//
//  foo1.h
//  Ctest
//
//  Created by bo li on 15-5-13.
//  Copyright (c) 2015年 zxtw. All rights reserved.
//

#ifndef Ctest_foo1_h
#define Ctest_foo1_h

void print_b();

#endif
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;//
//  foo1.c
//  Ctest
//
//  Created by bo li on 15-5-13.
//  Copyright (c) 2015年 zxtw. All rights reserved.
//

#include &amp;lt;stdio.h&amp;gt;
#include &amp;quot;test.h&amp;quot;

//extern int a;

void print_b()
{
    printf(&amp;quot;foo1 a = %d\n&amp;quot;, a);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;//
//  main.c
//  Ctest
//
//  Created by bo li on 15-5-13.
//  Copyright (c) 2015年 zxtw. All rights reserved.
//

#include &amp;lt;stdio.h&amp;gt;
#include &amp;quot;foo.h&amp;quot;
#include &amp;quot;foo1.h&amp;quot;

int main(int argc, const char * argv[])
{

    // insert code here...

    print_a();
    print_b();

    return 0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;运行结果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/img/learn-c-extern.png&quot; alt=&quot;6&quot;&gt;&lt;/p&gt;

&lt;p&gt;下面是网上的&lt;a href=&quot;http://stackoverflow.com/questions/496448/how-to-correctly-use-the-extern-keyword-in-c&quot;&gt;回答&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;extern tells the compiler that this data is defined somewhere and will be connected with the linker.

With the help of the responses here and talking to a few friends here is the practical example of a use of extern.

Example 1 - to show a pitfall:

File stdio.h:

int errno;
/* other stuff...*/
myCFile1.c:
#include &amp;lt;stdio.h&amp;gt;

Code...
myCFile2.c:
#include &amp;lt;stdio.h&amp;gt;

Code...
If myCFile1.o and myCFile2.o are linked, each of the c files have separate copies of errno. This is a problem as errno is suppose to be constant over all linked files.

Example 2 - The fix.

File stdio.h:

extern int errno;
/* other stuff...*/
File stdio.c

int errno;
myCFile1.c:
#include &amp;lt;stdio.h&amp;gt;

Code...
myCFile2.c:
#include &amp;lt;stdio.h&amp;gt;

Code...
Now if both myCFile1.o and MyCFile2.o are linked by the linker they will both point to the same errno. Thus, solving the implementation with extern.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>C语言点滴之static关键字</title>
        <link>http://github.com/Guo0625/2015/05/12/learn-c.html</link>
        <guid isPermaLink="true">http://github.com/Guo0625/2015/05/12/learn-c.html</guid>
        <pubDate>Tue, 12 May 2015 00:00:00 +0800</pubDate>
        <description>&lt;p&gt;static 的使用示例：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-matlab&quot; data-lang=&quot;matlab&quot;&gt;    &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;static从单词字面意思理解为：静态的意思。那么首先理解什么是静态？静态是通过什么体现的？有静态肯定会有“动态”。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://weibo.com/1970890475/profile?rightmod=1&amp;amp;wvr=6&amp;amp;mod=personinfo&quot;&gt;微博留言&lt;/a&gt;&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>初试android逆向工程</title>
        <link>http://github.com/Guo0625/2015/05/12/android.html</link>
        <guid isPermaLink="true">http://github.com/Guo0625/2015/05/12/android.html</guid>
        <pubDate>Tue, 12 May 2015 00:00:00 +0800</pubDate>
        <description>&lt;p&gt;今天公司要测试计费的sdk，于是心血来潮打算逆向一下公司的sdk。将sdk中的支付金额和渠道号更换，查看sdk的计费原理。&lt;/p&gt;

&lt;p&gt;首先，我是android逆向的小白,谷歌到一篇我自认为不错的&lt;a href=&quot;https://techstarspace.wordpress.com/2015/05/04/reverse-engineering-3-dex2jar-with-jd-gui-decompiler/&quot;&gt;教程&lt;/a&gt;，按照这篇操作下来，你就可以查看apk文件的java源码了。同时也可以参考这篇&lt;a href=&quot;http://blog.csdn.net/wirelessqa/article/details/8997168&quot;&gt;教程&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;有时你环境搭好后，运行命令可能会有如下错误：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-matlab&quot; data-lang=&quot;matlab&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;./&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d2j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dex2jar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Permission&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;denied&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在终端输入命令，修改执行脚本的权限，也可以修改所有的文件权限:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-matlab&quot; data-lang=&quot;matlab&quot;&gt;$ &lt;span class=&quot;n&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chmod&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; 或 $ &lt;span class=&quot;n&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chmod&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d2j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dex2jar&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;权限修改后，又报出如下错误：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-matlab&quot; data-lang=&quot;matlab&quot;&gt;&lt;span class=&quot;n&quot;&gt;localhost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dex2jar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;$ &lt;span class=&quot;o&quot;&gt;./&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d2j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dex2jar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dex&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thread&lt;/span&gt; &amp;quot;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&amp;quot; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UnsupportedClassVersionError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;googlecode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dex2jar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tools&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dex2jarCmd&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Unsupported&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;major&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minor&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;51.0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClassLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;defineClass1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Native&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClassLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;defineClassCond&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClassLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;631&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClassLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;defineClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClassLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;615&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;security&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SecureClassLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;defineClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SecureClassLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;141&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URLClassLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;defineClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URLClassLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;283&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URLClassLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;access&lt;/span&gt;$&lt;span class=&quot;mi&quot;&gt;000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URLClassLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;58&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URLClassLoader&lt;/span&gt;$&lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URLClassLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;197&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;security&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AccessController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doPrivileged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Native&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URLClassLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URLClassLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;190&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClassLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loadClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClassLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;306&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sun&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;misc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Launcher&lt;/span&gt;$&lt;span class=&quot;n&quot;&gt;AppClassLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loadClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Launcher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;301&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClassLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loadClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClassLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;247&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这说明你的jdk版本太低，可能低于1.7，不支持现在的操作。你有两个选择：一是、升级jdk；二是、选用低版本的dex2jar。（我遇到了上述问题，鉴于升级jdk可能带来其他环境的更改选择了&lt;a href=&quot;http://sourceforge.net/projects/dex2jar/&quot;&gt;dex2jar-0.0.9.15&lt;/a&gt;这个版本）&lt;/p&gt;

&lt;p&gt;上述只是可以将class.dex转换成jar文件。&lt;/p&gt;

&lt;p&gt;命令如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-matlab&quot; data-lang=&quot;matlab&quot;&gt;&lt;span class=&quot;n&quot;&gt;localhost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dex2jar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;9.15&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;$ &lt;span class=&quot;o&quot;&gt;./&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d2j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dex2jar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dex&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;dex2jar&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dex2jar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jar&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;localhost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dex2jar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;9.15&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;即可在目录下看到classes-dex2jar.jar文件。&lt;/p&gt;

&lt;p&gt;而查看jar文件需要用到jd-gui这个软件，直接下载安装即可。导入jar文件就可以查看，也可以将java代码保存。&lt;/p&gt;

&lt;p&gt;至此，查看apk源码的操作已介绍完毕。&lt;/p&gt;

&lt;p&gt;接下来便是，解析出manifest文件，通过使用&lt;a href=&quot;http://connortumbleson.com/apktool/googlecode/&quot;&gt;apkTool&lt;/a&gt;工具可以将apk文件解析。&lt;/p&gt;

&lt;p&gt;apktool可能也会遇到上述与dex2jar相似的问题，无非是修改权限、换版本照着做就可以了。apktool和apktool.jar放在/usr/local/bin目录下，可以使用apktool命令。&lt;/p&gt;

&lt;p&gt;执行命令解析apk文件&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-matlab&quot; data-lang=&quot;matlab&quot;&gt;&lt;span class=&quot;n&quot;&gt;localhost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sdkPay&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;$ &lt;span class=&quot;n&quot;&gt;apktool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;liantongstar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apk&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Baksmaling&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Loading&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resource&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Loaded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Decoding&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AndroidManifest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Loading&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resource&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Library&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apktool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;framework&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apk&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Loaded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Regular&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;manifest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Decoding&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Decoding&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*/*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;XMLs&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Copying&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assets&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;libs&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在相同目录下生成与apk同名的文件夹。&lt;/p&gt;

&lt;p&gt;然后开始修改源码中的计费信息，通过对照jar文件中的源码，以及smali文件中相应的代码，来修改！再次不多说。&lt;/p&gt;

&lt;p&gt;修改后要重新打包成apk文件，执行命令如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-matlab&quot; data-lang=&quot;matlab&quot;&gt;&lt;span class=&quot;n&quot;&gt;localhost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sdkPay&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;$ &lt;span class=&quot;n&quot;&gt;apktool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &amp;quot;&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&amp;quot; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apk&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Checking&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;whether&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sources&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;has&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;changed&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Smaling&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Checking&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;whether&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;has&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;changed&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Building&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Copying&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;libs&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Building&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apk&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;localhost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sdkPay&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;重新签名，安装测试即可。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-matlab&quot; data-lang=&quot;matlab&quot;&gt;&lt;span class=&quot;n&quot;&gt;localhost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sdkPay&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;$ &lt;span class=&quot;n&quot;&gt;jarsigner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;verbose&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keystore&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keystore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;signedjar&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newTest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;digestalg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SHA1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sigalg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MD5withRSA&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apk&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keystore&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://yunpan.cn/cjeWg8yfpnzjc&quot;&gt;mac下资源下载&lt;/a&gt; 提取码：5cfb&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>每日一记</title>
        <link>http://github.com/Guo0625/2015/05/11/record1.html</link>
        <guid isPermaLink="true">http://github.com/Guo0625/2015/05/11/record1.html</guid>
        <pubDate>Mon, 11 May 2015 00:00:00 +0800</pubDate>
        <description>&lt;p&gt;2015-05-08 搭建Blog环境，安装jekyll、升级Ruby。&lt;/p&gt;

&lt;p&gt;2015-05-09 去动物园玩。&lt;/p&gt;

&lt;p&gt;2015-05-10 搭建Blog，学习语法。&lt;/p&gt;

&lt;p&gt;2015-05-11 搭建Bolg，fork主题。&lt;/p&gt;

&lt;p&gt;2015-05-12 今天的任务是完成公司的工作后，继续学习C语言，记录笔记。&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>2014年阅读书单</title>
        <link>http://github.com/Guo0625/2014/06/01/Book-List-2014.html</link>
        <guid isPermaLink="true">http://github.com/Guo0625/2014/06/01/Book-List-2014.html</guid>
        <pubDate>Sun, 01 Jun 2014 00:00:00 +0800</pubDate>
        <description></description>
      </item>
    
      <item>
        <title>重读《我二十一岁那年》— 史铁生</title>
        <link>http://github.com/Guo0625/2011/06/25/Seeker-reply-me.html</link>
        <guid isPermaLink="true">http://github.com/Guo0625/2011/06/25/Seeker-reply-me.html</guid>
        <pubDate>Sat, 25 Jun 2011 00:00:00 +0800</pubDate>
        <description>&lt;p&gt;友谊医院神经内科病房有12间病室，除去1 号2 号，其余10间我都住过。当然，决不为此骄傲。即便多么骄傲的人，据我所见，一躺上病床也都谦恭。1号和2号是病危室，是一步蹬天的地方，上帝认为我住那儿为时尚早。 
　　19年前，父亲搀扶着我第一次走进那病房。那时我还能走，走得艰难，走得让人伤心就是了。当时我有过一个决心：要么好，要么死，一定不再这样走出来。 
　　正是晌午，病房里除了病人的微鼾，便是护士们轻极了的脚步，满目洁白，阳光中飘浮着药水的味道，如同信徒走进了庙宇，我感觉到了希望。一位女大夫把我引进10号病室。她贴近我的耳朵轻轻柔柔地问：“午饭吃了没？”我说：“您说我的病还能好吗？”她笑了笑。记不得她怎样回答了，单记得她说了一句什么之后，父亲的愁眉也略略地舒展。女大夫步履轻盈地走后，我永远留住了一个偏见：女人是最应该当大夫的，白大褂是她们最优雅的服装。 &lt;/p&gt;

&lt;p&gt;　　那天恰是我21岁生日的第二天。我对医学对命运都还未及了解，不知道病出在脊髓上将是一件多么麻烦的事。我舒心地躺下来睡了个好觉。心想：十天，一个月，好吧就算是三个月，然后我就又能是原来的样子了。和我一起插队的同学来看我时，也都这样想，他们给我带来很多书。 &lt;/p&gt;

&lt;p&gt;　　10号有6 个床位。我是6 床。5 床是个农民，他天天都盼着出院。“光房钱一天一块一毛五，你算算得啦，”5 
床说，“‘死病’值得了这么些？”３床就说。“得了嘿，你有完没完！死死死，数你悲观。”４床是个老头，说：“别介别介，咱毛主席有话啦——既来之，则安之。”农民便带笑地把目光转向我，却是对他们说：“敢情你们都有公费医疗。”他知道我还在与贫下中农相结合。1 
床不说话，1 床一旦说话即可出院。2 床像是个有些来头的人，举手投足之间便赢得大伙的敬畏。2 床幸福地把一切名词都忘了，包括忘了自己的姓名。2床讲话时，所有名词都以“这个”“那个”代替，因而讲到一些轰轰烈烈的事迹却听不出是谁人所为。4 床说：“这多好，不得罪人。” 
　　我不搭茬儿。刚有的一点舒心顷刻全光。一天一块多房钱都要从父母的工资里出，一天好几块的药钱、饭钱都要从父母的工资里出，何况为了给我治病家中早已是负债累累了。我马上就想那农民之所想了：什么时候才能出院呢？我赶紧松开拳头让自己放明白点：这是在医院不是在家里，这儿没人会容忍我发脾气，而且砸坏了什么还不是得用父母的工资去赌？所幸身边有书，想来想去只好一头埋进书里去，好吧好吧，就算是三个月！我凭白地相信这样一个期限。 &lt;/p&gt;

&lt;p&gt;　　可是三个月后我不仅没能出院，病反而更厉害了。 
　　那时我和2 床一起住到了7 号。2床果然不同寻常，是位局长，11级干部，但还是多了一级，非10级以上者无缘去住高干病房的单间。7号是这普通病房中唯一仅设两张病床的房间，最接近单间，故一向由最接近10级的人去住。据说刚有个13级从这儿出去。2床搬来名正言顺。我呢？护士长说是“这孩子爱读书”，让我帮助2 床把名词重新记起来。“你看他连自己是谁都闹不清了。”护士长说。但2床却因此越来越让人喜欢。因为“局长”也是名词也在被忘之列，我们之间的关系日益平等、融洽。有一天他问我：“你是干什么的？”我说：“插队的。”2床说他的“那个”也是，两个“那个”都是，他在高出他半个头的地方比划一下：“就是那两个，我自己养的。”“您是说您的两个儿子？”他说对，儿子。他说好哇，革命嘛就不能怕苦，就是要去结合。他说：“我们当初也是从那儿出来的嘛。”我说：“农村？”“对对对。什么？”“农村。”“对对对农村。别忘本呀！”我说是。我说：“您的家乡是哪儿？”他于是抱着头想好久。这一回我也没办法提醒他。最后他骂一句，不想了，说：“我也放过那玩艺。”他在头顶上伸直两个手指。“是牛吗？”他摇摇头，手往低处一压。“羊？”“对了，羊。我放过羊。”他躺下，双手垫在脑后，甜甜蜜蜜地望着天花板老半天不言语。大夫说他这病叫作“角回综合症，命名性失语”，并不影响其它记忆，尤其是遥远的往事更都记得清楚。我想局长到底是局长，比我会得病。他忽然又坐起来：“我的那个，喂，小什么来？”“小儿子？”“对！”他怒气冲冲地跳到地上，说：“那个小玩艺，娘个Ｘ！”说：“他要去结合，我说好嘛我支持。”说：“他来信要钱，说要办个这个。”他指了指周围，我想“那个小玩艺”可能是要办个医疗站。他说：“好嘛，要多少？我给。可那个小玩艺！”他背着手气哼哼地来回走，然后停住，两手一摊，“可他又要在那儿结婚！”“在农村！”“对。农村。”“跟农民？”“跟农民。”无论是根据我当时的思想觉悟，还是根据报纸电台当时的宣传倡导，这都是值得肃然起敬的。“扎根派。”我钦佩地说。“娘了个Ｘ派！”他说：“可你还要不要回来嘛？”这下我有点发懵。见我愣着，他又一跺脚，补充道：“可你还要不要革命？”这下我懂了，先不管革命是什么，2床的坦诚却令人欣慰。 
　　不必去操心那些玄妙的逻辑了。整个冬天就快过去，我反倒拄着拐杖都走不到院子里去了，双腿日甚一日地麻木，肌肉无可遏止地萎缩，这才是需要发愁的。 
　　我能住到7号来，事实上是因为大夫护士们都同情我。因为我还这么年轻，因为我是自费医疗，因为大夫护士都已经明白我这病的前景极为不妙，还因为我爱读书——在那个“知识越多越反动”的年代，大夫护士们尤为喜爱一个爱读书的孩子。他们还把我当孩子。他们的孩子有不少也在插队。护士长好几次在我母亲面前夸我，最后总是说：“唉，这孩子……”这一声叹，暴露了当代医学的爱莫能助。他们没有别的办法帮助我，只能让我住得好一点，安静些，读读书吧——他们可能是想，说不定书中能有“这孩子”一条路。 &lt;/p&gt;

&lt;p&gt;　　可我已经没了读书的兴致。整日躺在床上，听各种脚步从门外走过；希望他们停下来，推门进来，又希望他们千万别停，走过去走他们的路去别来烦我。心里荒荒凉凉地祈祷：上帝如果你不收我回去，就把能走路的腿也给我留下！我确曾在没人的时候双手合十，出声地向神灵许过愿。多年以后才听一位无名的哲人说过：危卧病榻，难有无神论者。如今来想，有神无神并不值得争论，但在命运的混沌之点，人自然会忽略着科学，向虚暝之中寄托一份虔敬的祈盼。正如迄今人类最美好的向往也都没有实际的验证，但那向往并不因此消灭。 &lt;/p&gt;

&lt;p&gt;　　主管大夫每天来查房，每天都在我的床前停留得最久：“好吧，别急。”按规矩主任每星期查一次房，可是几位主任时常都来看看我：“感觉怎么样？嗯，一定别着急。”有那么些天全科的大夫都来看我，八小时以内或以外，单独来或结队来，检查一番各抒主张，然后都对我说：“别着急，好吗？千万别急。”从他们谨慎的言谈中我渐渐明白了一件事：我这病要是因为一个肿瘤的捣鬼，把它打出来切下去随便扔到一个垃圾桶里，我就还能直立行走，否则我多半就是把祖先数百万年进化而来的这一优势给弄丢了。窗外的小花园里已是桃红柳绿，22个春天没有哪一个像这样让人心抖。我已经不敢去羡慕那些在花丛树行间漫步的健康人和在小路上打羽毛球的年轻人。我记得我久久地看过一个身着病服的老人，在草地上踱着方步晒太阳；只要这样我想只要这样！只要能这样就行了就够了！我回忆脚踩在软软的草地上是什么感觉？想走到哪儿就走到哪儿是什么感觉？踢一颗路边的石子，踢着它走是什么感觉？没这样回忆过的人不会相信，那竟是回忆不出来的！老人走后我仍呆望着那块草地，阳光在那儿慢慢地淡薄，脱离，凝作一缕孤哀凄寂的红光一步步爬上墙，爬上楼顶……我写下一句歪诗：轻拨小窗看春色，漏入人间一斜阳。日后我摇着轮椅特意去看过那块草地，并从那儿张望7 
号窗口，猜想那玻璃后面现在住的谁？上帝打算为他挑选什么前程？当然，上帝用不着征求他的意见。 
　　我乞求上帝不过是在和我开着一个临时的玩笑——在我的脊椎里装进了一个良性的瘤子。对对，它可以长在椎管内，但必须要长在软膜外，那样才能把它剥离而不损坏那条珍贵的脊髓。“对不对，大夫？”“谁告诉你的？”“对不对吧？”大夫说：“不过，看来不太像肿瘤。”我用目光在所有的地方写下“上帝保佑”，我想，或许把这四个字写到千遍万遍就会赢得上帝的怜悯，让它是个瘤子，一个善意的瘤子。要么干脆是个恶毒的瘤子，能要命的那一种，那也行。总归得是瘤子，上帝！ &lt;/p&gt;

&lt;p&gt;　　朋友送了我一包莲子，无聊时我捡几颗泡在瓶子里，想，赌不赌一个愿？——要是它们能发芽，我的病就不过是个瘤子。但我战战兢兢地一直没敢赌。谁料几天后莲子竟都发芽。我想好吧我赌！我想其实我压根儿是倾向于赌的。我想倾向于赌事实上就等于是赌了。我想现在我还敢赌——它们一定能长出叶子！（这是明摆着的。）我每天给它们换水，早晨把它们移到窗台西边，下午再把它们挪到东边，让它们总在阳光里；为此我抓住床栏走，扶住窗台走，几米路我走得大汗淋漓。这事我不说，没人知道。不久，它们长出一片片圆圆的叶子来。“圆”，又是好兆。我更加周到地侍候它们，坐回到床上气喘吁吁地望着它们，夜里醒来在月光中也看看它们：好了，我要转运了。并且忽然注意到“莲”与“怜”谐意，毕恭毕敬地想：上帝终于要对我发发慈悲了吧？这些事我不说没人知道。叶子长出了瓶口，闲人要去摸，我不让，他们硬是摸了呢，我便在心里加倍地祈祷几回。这些事我不说，现在也没人知道。然而科学胜利了，它三番五次地说那儿没有瘤子，没有没有。果然，上帝直接在那条娇嫩的脊髓上做了手脚！定案之日，我像个冤判的屈鬼那样疯狂地作乱，挣扎着站起来，心想干嘛不能跑一回给那个没良心的上帝瞧瞧？后果很简单，如果你没摔死你必会明白：确实，你干不过上帝。 &lt;/p&gt;

&lt;p&gt;　　我终日躺在床上一言不发，心里先是完全的空白，随后由着一个死字去填满。王主任来了。（那个老太太，我永远忘不了她。还有张护士长。8 
年以后和17年以后，我两次真的病到了死神门口，全靠这两位老太太又把我抢下来。）我面向墙躺着，王主任坐在我身后许久不说什么，然后说了，话并不多，大意是：还是看看书吧，你不是爱看书吗？人活一天就不要白活。将来你工作了，忙得一点时间都没有，你会后悔这段时光就让它这么白白地过去了。这些话当然并不能打消我的死念，但这些话我将受用终生，在以后的若干年里我频繁地对死神抱有过热情，但在未死之前我一直记得王主任这些活，因而还是去做些事。使我没有去死的原因很多（我在另外的文章里写过），“人活一天就不要白活”亦为其一，慢慢地去做些事于是慢慢地有了活的兴致和价值感。有一年我去医院看她，把我写的书送给她，她已是满头白发了，退休了，但照常在医院里从早忙到晚。我看着她想，这老太太当年必是心里有数，知道我还不至去死，所以她单给我指一条活着的路。可是我不知道当年我搬离7 
号后，是谁最先在那儿发现过一团电线？并对此作过什么推想？那是个秘密，现在也不必说。假定我那时无顾忌地议论世界上所有的事，高兴了还可以轻声地唱点什么——陕北民歌，或插队知青自己的歌。晚上朋友们走了，在小台灯幽寂而又喧嚣的光线里，我开始想写点什么，那便是我创作欲望最初的萌生。我一时忘记了死，还因为什么？还因为爱情的影子在隐约地晃动。那影子将长久地在我心里晃动，给未来的日子带来幸福也带来痛苦，尤其带来激情，把一个绝望的生命引领出死谷；无论是幸福还是痛苦，都会成为永远的珍藏和神圣的纪念。 &lt;/p&gt;

&lt;p&gt;　　21岁、29岁、38岁，我三进三出友谊医院，我没死，全靠了友谊。后两次不是我想去勾结死神，而是死神对我有了兴趣；我高烧到40多度，朋友们把我抬到友谊医院，内科说没有护理截瘫病人的经验，柏大夫就去找来王主任，找来张护士长，于是我又住进神内病房。尤其是29岁那次，高烧不退。整天昏睡、呕吐，差不多三个月不敢闻饭味，光用血管去喝葡萄糖，血压也不安定，先是低压升到120 
接着高压又降到60，大夫们一度担心我活不过那年冬天了——肾，好像是接近完蛋的模样，治疗手段又像是接近于无了。我的同学找柏大夫商量，他们又一起去找唐大夫；要不要把这事告诉我父亲？他们决定：不。告诉他，他还不是由着急？然后他们分了工：死的事由我那同学和柏大夫管，等我死了由他们去向我父亲解释；活着的我由唐大夫多多关照。唐大夫说：“好，我可以教学的理由留他在这儿，他活一天就还要想一天办法。”当然，这些事都是我后来听说的。真是人不当死鬼神奈何其不得，冬天一过我又活了，看样子极可能活到下一个世纪去。唐大夫就是当年把我接进10号的那个大夫，就是那个步履轻盈温文尔雅的女大夫，但８年过去她已是两鬓如霜了。又过了９年，我第三次住院时后大夫已经不在。听说我又来了，科里的老大夫、老护士们都来看我，问候我，夸我的小说写得还不错，跟我叙叙家常，唯唐大夫不能来了。我知道她不能来了，她不在了。我曾摇着轮椅去给她送过一个小花圈，大家都说。“她是累死的，她肯定是累死的！”我永远记得她把我迎进病房的那个中午，她贴近我的耳边轻轻柔柔地问：“午饭吃了没？”倏忽之间，怎么，她已经不在了？她不过才50岁出头。这事真让人哑口无言，总觉得不大说得通，肯定是谁把逻辑摆弄错了。 &lt;/p&gt;

&lt;p&gt;　　但愿柏大夫这一代的命运会好些。实际只是当着众多病人时我才叫她柏大夫。平时我叫她“小柏”她叫我“小史”。她开玩笑时自称是我的“私人保健医”，不过这不像玩笑这很近实情。近两年我叫她“老柏”她叫我“老史”了。19年前的深秋，病房里新来个卫生员，梳着短辫儿，戴一条长围巾穿一双黑灯芯绒鞋，虽是一口地道的北京城里话，却满身满脸的乡土气尚未退尽。“你也是插队的？”我问她。“你也是？”听得出来，她早已知道了。“你哪届？”“老初二。你呢？”“我68，老初一。你哪儿？”“陕北。你哪儿？”“我内蒙。”这就行了，全明白了，这样的招呼是我们这代人的专利，这样的问答立刻把我们拉近。我料定，几十年后这样的对话仍会在一些白发苍苍的人中间流行，仍是他们之间最亲切的问候和最有效的沟通方式；后世的语言学者会煞费苦心地对此作一番考证，正儿八经地写一篇论文去得一个学位。而我们这代人是怎样得一个学位的呢？十四五岁停学，十七八岁下乡，若干年后回城，得一个最被轻视的工作，但在农村呆过了还有什么工作不能干的呢，同时学心不死业余苦读，好不容易上了个大学，毕业之后又被轻视——因为真不巧你是个“工农兵学员”，你又得设法摘掉这个帽子，考试考试考试这代人可真没少考试，然后用你加倍的努力让老的少的都服气，用你的实际水平和能力让人们相信你配得上那个学位——比如说，这就是我们这代人得一个学位的典型途径。这还不是最坎坷的途径。“小柏”变成“老柏”，那个卫生员成为柏大夫，大致就是这么个途径，我知道，因为我们已是多年的朋友。她的丈夫大体上也是这么走过来的，我们都是朋友了；连她的儿子也叫我“老史”。闲下来细细去品，这个“老史”最令人羡慕的地方，便是一向活在友谊中。真说不定，这与我21岁那年恰恰住进了“友谊”医院有关。 &lt;/p&gt;

&lt;p&gt;　　因此偶尔有人说我是活在世外桃源，语气中不免流露了一点讥讽，仿佛这全是出于我的自娱甚至自欺。我颇不以为然。我既非活在世外桃源，也从不相信有什么世外桃源。但我相信世间桃源，世间确有此源，如果没有恐怕谁也就不想再活；倘此源有时弱小下去，依我看，至少讥讽并不能使其强大。千万年来它作为现实，更作为信念，这才不断。它源于心中再流人心中，它施于心又由于心，这才不断。欲其强大，舍心之虔诚又向何求呢？ &lt;/p&gt;

&lt;p&gt;　　也有人说我是不是一直活在童话里？语气中既有赞许又有告诫。赞许并且告诫，这很让我信服。赞许既在，告诫并不意指人们之间应该加固一条防线，而只是提醒我：童话的缺憾不在于它太美，而在于它必要走进一个更为纷繁而且严酷的世界，那时只怕它太娇嫩。 &lt;/p&gt;

&lt;p&gt;　　事实上在21岁那年，上帝已经这样提醒我了，他早已把他的超级童话和永恒的谜语向我略露端倪。 
　　住在4 号时，我见过一个男孩。他那年7 
岁，家住偏僻的山村，有一天传说公路要修到他家门前了，孩子们都翘首以待好梦联翩。公路终于修到，汽车终于开来，乍见汽车，孩子们惊讶兼着胆怯，远远地看。日子一长孩子便有奇想，发现扒住卡车的尾巴可以威风凛凛地兜风，他们背着父母玩得好快活。可是有一次，只一次，这7 
岁的男孩失手从车上摔了下来。他住进医院时已经不能跑，四肢肌肉都在萎缩。病房里很寂寞，孩子一瘸一瘸地到处串；淘得过分了，病友们就说他：“你说说你是怎么伤的？”孩子立刻低了头，老老实实地一动不动。“说呀？”“说，因为什么？”孩子嗫嚅着。“喂，怎么不说呀？给忘啦？”“因为扒汽车，”孩子低声说。“因为淘气”孩子补充道。他在诚心诚意地承认错误。大家都沉默，除了他自己谁都知道：这孩子伤在脊髓上，那样的伤是不可逆的。孩子仍不敢动，规规矩矩地站着用一双正在萎缩的小手擦眼泪。终于会有人先开口，语调变得哀柔；：“下次还淘不淘了？”孩子很熟悉这样的宽容或原谅，马上使劲摇头：“不，不，不了！”同时松一口气了。但这一回不同以往，怎么没有人接着向他允诺一好啦，只要改了就还是好孩子一呢？他睁大眼睛去看每一个大人，那意思是：还不行么？再不淘气了还不行么？他不知道，他还不懂，命运中有一种错误是只能犯一次的，并没有改正的机会，命运中有一种并非是错误的错误（比如淘气，是什么错误呢），但这却是不被原谅的。那孩子小名叫“五蛋”，我记得他，那时他才7 
岁，他不知道，他还不懂。未来，他势必有一天会知道，可他势必有一天就会懂吗？但无论如何，那一天就是一个童话的结尾。在所有童话的结尾处，让我们这样理解吧：上帝为锤炼生命，将布设下一个残酷的谜语。 &lt;/p&gt;

&lt;p&gt;　　住在6号时，我见过有一对恋人。那时他们正是我现在的年纪，40岁。他们是大学同学。男的24岁时本来就要出国留学，日期已定，行装都备好，可命运无常，不知因为什么屁大的一点事不得不拖延一个月，偏就在这一个月里因为一次医疗事故他瘫痪了。女的对他一往情深，等着他，先是等着他病好，没等到；然后还等着他，等着他同意跟她结婚，还是没等到。外界的和内心的阻力重重，一年一年，男的既盼着她来又说服着她走。但一年一年，病也难逃爱也难逃，女的就这么一直等着。有一次她狠了狠心，调离北京到外地去工作了，但是斩断感情却不这么简单，而且再想调回北京也不这么简单，女的只要有三天假期也迢迢千里地往北京跑。男的那时病更重了，全身都不能动了，和我同住一个病室。女的走后，男的对我说过：“你要是爱她，你就不能害她，除非你不爱她，可是你又为什么要结婚呢？”男的睡着了，女的对我说过：我知道他这是爱我，可他不明白其实这是害我，我真想一走了事，我试过，不行，我知道我没法不爱他。女的走了男的又对我说过：不不，她还年轻，她还有机会，她得结婚，她这人不能没有爱。男的睡了女的又对我说过：可什么是机会呢？机会不在外面在心里，结婚的机会有可能在外边，可爱情的机会只能在心里。女的不在时，我把她的话告诉男的，男的默然垂泪。我问他：“你干嘛不能跟她结婚呢？”他说：“这你还不懂。”他说：“这很难说得清，因为你活在整个这个世界上。”他说：“所以，有时候这不是光由两个人就能决定的。”我那时确实还不懂。我找到机会又问女的：“为什么不是两个人就能决定的？”她说：“不，我不这么认为。”她说：“不过确实，有时候这确实很难。”她沉吟良久，说：“真的，跟你说你现在也不懂。”19年过去了，那对恋人现在该已经都是老人。我不知道现在他们各自在哪儿，我只听说他们后来还是分手了。19年中，我自己也有过爱情的经历了，现在要是有个21岁的人问我爱情都是什么？大概我也只能回答：真的，这可能从来就不是能说得清的。无论她是什么，她都很少属于语言，而是全部属于心的。还是那位台湾作家三毛说得对：爱如禅，不能说不能说，一说就错。那也是在一个童话的结尾处，上帝为我们能够永远地追寻着活下去，而设置的一个残酷却诱人的谜语。 &lt;/p&gt;

&lt;p&gt;　　21岁过去，我被朋友们抬着出了医院，这是我走进医院时怎么也没料到的。我没有死，也再不能走，对未来怀着希望也怀着恐惧。在以后的年月里，还将有很多我料想不到的事发生，我仍旧有时候默念着“上帝保佑”而陷入茫然。但是有一天我认识了神，他有一个更为具体的名字——精神。在科学的迷茫之处，在命运的混沌之点，人唯有乞灵于自己的精神。不管我们信仰什么，都是我们自己的精神的描述和引导。 &lt;/p&gt;

&lt;p&gt;　　                                                                       一九九一年 &lt;/p&gt;
</description>
      </item>
    
  </channel>
</rss>